// Code generated by protoc-gen-go-vtproto. DO NOT EDIT.
// protoc-gen-go-vtproto version: v0.6.1-0.20241121165744-79df5c4772f2
// source: ghost/ghost.proto

package ghost

import (
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

func (this *MatchInfoRequest) EqualVT(that *MatchInfoRequest) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.MatchUrn != that.MatchUrn {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *MatchInfoRequest) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*MatchInfoRequest)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *MatchInfoResponse) EqualVT(that *MatchInfoResponse) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.MatchInfo == nil && that.MatchInfo != nil {
		return false
	} else if this.MatchInfo != nil {
		if that.MatchInfo == nil {
			return false
		}
		if !this.MatchInfo.(interface {
			EqualVT(isMatchInfoResponse_MatchInfo) bool
		}).EqualVT(that.MatchInfo) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *MatchInfoResponse) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*MatchInfoResponse)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *MatchInfoResponse_Cs2) EqualVT(thatIface isMatchInfoResponse_MatchInfo) bool {
	that, ok := thatIface.(*MatchInfoResponse_Cs2)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Cs2, that.Cs2; p != q {
		if p == nil {
			p = &CS2MatchInfoResponse{}
		}
		if q == nil {
			q = &CS2MatchInfoResponse{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *MatchInfoResponse_Dota2) EqualVT(thatIface isMatchInfoResponse_MatchInfo) bool {
	that, ok := thatIface.(*MatchInfoResponse_Dota2)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Dota2, that.Dota2; p != q {
		if p == nil {
			p = &Dota2MatchInfoResponse{}
		}
		if q == nil {
			q = &Dota2MatchInfoResponse{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *CS2MatchInfoResponse) EqualVT(that *CS2MatchInfoResponse) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.MapName != that.MapName {
		return false
	}
	if this.MapAssetName != that.MapAssetName {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *CS2MatchInfoResponse) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*CS2MatchInfoResponse)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Dota2MatchInfoResponse) EqualVT(that *Dota2MatchInfoResponse) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Dota2MatchInfoResponse) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*Dota2MatchInfoResponse)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *MatchStatusRequest) EqualVT(that *MatchStatusRequest) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.MatchUrn != that.MatchUrn {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *MatchStatusRequest) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*MatchStatusRequest)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *MatchStatusResponse) EqualVT(that *MatchStatusResponse) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.MatchStatus != that.MatchStatus {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *MatchStatusResponse) EqualMessageVT(thatMsg proto.Message) bool {
	that, ok := thatMsg.(*MatchStatusResponse)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
